{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/kmhalpin/Moodle/master/"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    "sshPublicKey": {
      "metadata": {
        "description": "ssh public key"
      },
      "type": "string"
    },
    "keyVaultResourceId": {
      "defaultValue": "",
      "metadata": {
        "description": "(VMSS https termination only) Azure Resource Manager resource ID of the Key Vault in case you stored your SSL cert in an Azure Key Vault (Note that this Key Vault must have been pre-created on the same Azure region where this template is being deployed). Leave this blank if you didn't. Resource ID example: /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/xxx/providers/Microsoft.KeyVault/vaults/yyy. This value can be obtained from keyvault.sh output if you used the script to store your SSL cert in your Key Vault."
      },
      "type": "string"
    },
    "sslCertKeyVaultURL": {
      "defaultValue": "",
      "metadata": {
        "description": "(VMSS https termination only) Azure Key Vault URL for your stored SSL cert. This value can be obtained from keyvault.sh output if you used the script to store your SSL cert in your Key Vault. This parameter is ignored if the keyVaultResourceId parameter is blank."
      },
      "type": "string"
    },
    "sslCertThumbprint": {
      "defaultValue": "",
      "metadata": {
        "description": "(VMSS https termination only) Thumbprint of your stored SSL cert. This value can be obtained from keyvault.sh output if you used the script to store your SSL cert in your Key Vault. This parameter is ignored if the keyVaultResourceId parameter is blank."
      },
      "type": "string"
    },
    "caCertKeyVaultURL": {
      "defaultValue": "",
      "metadata": {
        "description": "(VMSS https termination only) Azure Key Vault URL for your stored CA (Certificate Authority) cert. This value can be obtained from keyvault.sh output if you used the script to store your CA cert in your Key Vault. This parameter is ignored if the keyVaultResourceId parameter is blank."
      },
      "type": "string"
    },
    "caCertThumbprint": {
      "defaultValue": "",
      "metadata": {
        "description": "(VMSS https termination only) Thumbprint of your stored CA cert. This value can be obtained from keyvault.sh output if you used the script to store your CA cert in your Key Vault. This parameter is ignored if the keyVaultResourceId parameter is blank."
      },
      "type": "string"
    },
    "siteURL": {
      "defaultValue": "www.example.org",
      "metadata": {
        "description": "URL for Moodle site"
      },
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "name": "mainTemplate",
      "properties": {
        "mode": "Incremental",
        "parameters": {
          "_artifactsLocation": { "value": "[parameters('_artifactsLocation')]" },
          "_artifactsLocationSasToken": { "value": "[parameters('_artifactsLocationSasToken')]" },
          "redisDeploySwitch": { "value": false },
          "sshPublicKey": { "value": "[parameters('sshPublicKey')]" },
          "siteURL": { "value": "[parameters('siteURL')]" },
          "keyVaultResourceId": { "value": "[parameters('keyVaultResourceId')]" },
          "sslCertKeyVaultURL": { "value": "[parameters('sslCertKeyVaultURL')]" },
          "sslCertThumbprint": { "value": "[parameters('sslCertThumbprint')]" },
          "caCertKeyVaultURL": { "value": "[parameters('caCertKeyVaultURL')]" },
          "caCertThumbprint": { "value": "[parameters('caCertThumbprint')]" },
          "controllerVmSku": { "value": "Standard_B2s" },
          "mysqlPgresVcores": { "value": 2 },
          "mysqlPgresStgSizeGB": { "value": 5 },
          "OSDiskSizeInGB": { "value": 32 },
          "fileServerType": { "value": "azurefiles" },
          "fileServerDiskSize": { "value": 100 },
          "installObjectFsSwitch": { "value": true },
          "installO365pluginsSwitch": { "value": true },
          "storageAccountType": { "value": "Premium_LRS" },
          "enableAccelNwForOtherVmsSwitch": { "value": false },
          "autoscaleVmSku": { "value": "Standard_B2s" }
        },
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), 'azuredeploy.json', parameters('_artifactsLocationSasToken'))]"
        }
      }
    }
  ],
  "outputs": {
    "mainTemplateOutputs": {
      "type": "object",
      "value": "[reference('mainTemplate').outputs]"
    }
  },
  "variables": {
    "documentation01": "This wrapper template calls the main-template with maximum configs and the only required parameter (sshPublicKey).",
    "documentation02": "For the best-possible performance, highly available, and most Moodle features, other parameters are fixed in this tempalte and overriden as above."
  }
}
